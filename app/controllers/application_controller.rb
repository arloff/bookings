# frozen_string_literal: true

# Generated by Rails
class ApplicationController < ActionController::Base
  before_action :set_locale
  before_action :authenticate_user!

  check_authorization unless: :devise_or_active_admin_controller?

  def devise_or_active_admin_controller?
    devise_controller? || active_admin_controller?
  end

  def active_admin_controller?
    self.class.name.split('::').first == 'Admin'
  end

  def set_locale
    I18n.locale = params[:locale] || I18n.default_locale
  end

  def self.default_url_options(options = {})
    options.merge(locale: I18n.locale)
  end

  def authenticate_active_admin_user!
    user = authenticate_user!
    redirect_to unauthorized_path unless user.admin?
    #  throw(:warden) unless user.admin?
  end

  def active_admin_access_denied(_e)
    redirect_to unauthorized_path
  end

  rescue_from CanCan::AccessDenied do |exception|
    respond_to do |format|
      format.json { head :forbidden, content_type: 'text/html' }
      format.html { redirect_to main_app.root_url, notice: exception.message }
      format.js   { head :forbidden, content_type: 'text/html' }
    end
  end

  # protected
  #
  # def authenticate_user!
  #   if user_signed_in?
  #     redirect_to unauthorized_path
  #     # super
  #   else
  #     super
  #     #redirect_to unauthorized_path
  #     ## if you want render 404 page
  #     ## render :file => File.join(Rails.root, 'public/404'),
  #     # :formats => [:html], :status => 404, :layout => false
  #   end
  # end
end
